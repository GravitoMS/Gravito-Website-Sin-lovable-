#!/usr/bin/env node

const { createClient } = require('@supabase/supabase-js');
const fs = require('fs');
const path = require('path');

// Configuraci√≥n de Supabase (usando las credenciales del proyecto)
const supabaseUrl = 'https://expqwtvlinsudlbpjldf.supabase.co';
const supabaseKey = 'sb_publishable_tML1Lcese9dSNerDU9Tuag_YQ82Vlqw';

const supabase = createClient(supabaseUrl, supabaseKey);

async function setupBlogAndConfig() {
  console.log('üöÄ Iniciando configuraci√≥n de Blog y Configuraci√≥n del Sistema...\n');

  try {
    // 1. Crear tabla blog_posts usando SQL directo
    console.log('üìù Creando tabla blog_posts...');
    const { error: blogTableError } = await supabase
      .from('page_content')
      .select('*')
      .limit(1)
      .then(() => {
        // Si llegamos aqu√≠, la conexi√≥n funciona, intentemos crear la tabla
        return supabase.rpc('exec_sql', {
          sql: `
            CREATE TABLE IF NOT EXISTS blog_posts (
              id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
              title TEXT NOT NULL,
              content TEXT NOT NULL,
              excerpt TEXT,
              published BOOLEAN DEFAULT false,
              created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
              updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
            );
          `
        });
      });

    if (blogTableError) {
      console.log('‚ö†Ô∏è No se pudo crear la tabla blog_posts autom√°ticamente');
      console.log('   Esto es normal si no tienes permisos de administrador');
      console.log('   La tabla se crear√° cuando ejecutes el SQL manualmente');
    } else {
      console.log('‚úÖ Tabla blog_posts creada/verificada');
    }

    // 2. Crear tabla system_config
    console.log('‚öôÔ∏è Creando tabla system_config...');
    const { error: configTableError } = await supabase.rpc('exec_sql', {
      sql: `
        CREATE TABLE IF NOT EXISTS system_config (
          id INTEGER PRIMARY KEY DEFAULT 1,
          config JSONB NOT NULL DEFAULT '{}',
          created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
          updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
        );
      `
    });

    if (configTableError) {
      console.log('‚ö†Ô∏è No se pudo crear la tabla system_config autom√°ticamente');
      console.log('   Esto es normal si no tienes permisos de administrador');
      console.log('   La tabla se crear√° cuando ejecutes el SQL manualmente');
    } else {
      console.log('‚úÖ Tabla system_config creada/verificada');
    }

    // 3. Intentar insertar configuraci√≥n inicial del sistema
    console.log('‚öôÔ∏è Insertando configuraci√≥n inicial del sistema...');
    const { error: configInsertError } = await supabase
      .from('system_config')
      .upsert({
        id: 1,
        config: {
          site_name: 'Gravito Website',
          site_description: 'Sitio web profesional de Gravito',
          contact_email: 'contacto@gravito.com',
          maintenance_mode: false,
          analytics_enabled: true,
        },
        updated_at: new Date().toISOString(),
      });

    if (configInsertError) {
      console.log('‚ö†Ô∏è No se pudo insertar la configuraci√≥n inicial');
      console.log('   Esto es normal si la tabla no existe a√∫n');
      console.log('   La configuraci√≥n se insertar√° cuando la tabla est√© disponible');
    } else {
      console.log('‚úÖ Configuraci√≥n inicial del sistema insertada');
    }

    // 4. Intentar insertar posts de ejemplo del blog
    console.log('üìù Insertando posts de ejemplo del blog...');
    const { error: blogInsertError } = await supabase
      .from('blog_posts')
      .upsert([
        {
          title: 'Bienvenido a Gravito',
          content: 'Este es el primer post de nuestro blog. Aqu√≠ compartiremos noticias, actualizaciones y contenido relevante sobre nuestros servicios.',
          excerpt: 'Bienvenida al blog oficial de Gravito',
          published: true,
        },
        {
          title: 'Nuestros Servicios',
          content: 'Descubre todos los servicios que ofrecemos en Gravito. Desde desarrollo web hasta estrategia digital, estamos aqu√≠ para ayudarte.',
          excerpt: 'Conoce todos nuestros servicios profesionales',
          published: false,
        }
      ]);

    if (blogInsertError) {
      console.log('‚ö†Ô∏è No se pudieron insertar los posts de ejemplo');
      console.log('   Esto es normal si la tabla no existe a√∫n');
      console.log('   Los posts se insertar√°n cuando la tabla est√© disponible');
    } else {
      console.log('‚úÖ Posts de ejemplo del blog insertados');
    }

    // 5. Verificar las tablas existentes
    console.log('\nüîç Verificando tablas existentes...');
    
    const { data: blogPosts, error: blogCheckError } = await supabase
      .from('blog_posts')
      .select('*');

    if (blogCheckError) {
      console.log('‚ö†Ô∏è Tabla blog_posts no disponible a√∫n');
    } else {
      console.log(`‚úÖ blog_posts: ${blogPosts?.length || 0} posts encontrados`);
    }

    const { data: systemConfig, error: configCheckError } = await supabase
      .from('system_config')
      .select('*');

    if (configCheckError) {
      console.log('‚ö†Ô∏è Tabla system_config no disponible a√∫n');
    } else {
      console.log(`‚úÖ system_config: ${systemConfig?.length || 0} configuraciones encontradas`);
    }

    // 6. Crear archivo SQL para configuraci√≥n manual
    console.log('\nüìÑ Creando archivo SQL para configuraci√≥n manual...');
    const sqlContent = `
-- Configuraci√≥n de Blog y Sistema para Gravito Website
-- Ejecuta este SQL en tu panel de Supabase

-- 1. Crear tabla blog_posts
CREATE TABLE IF NOT EXISTS blog_posts (
  id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  title TEXT NOT NULL,
  content TEXT NOT NULL,
  excerpt TEXT,
  published BOOLEAN DEFAULT false,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- 2. Crear tabla system_config
CREATE TABLE IF NOT EXISTS system_config (
  id INTEGER PRIMARY KEY DEFAULT 1,
  config JSONB NOT NULL DEFAULT '{}',
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- 3. Configurar RLS para blog_posts
ALTER TABLE blog_posts ENABLE ROW LEVEL SECURITY;

CREATE POLICY IF NOT EXISTS "Admin users can manage blog posts" ON blog_posts
  FOR ALL USING (
    EXISTS (
      SELECT 1 FROM admin_users 
      WHERE admin_users.email = auth.jwt() ->> 'email'
    )
  );

-- 4. Configurar RLS para system_config
ALTER TABLE system_config ENABLE ROW LEVEL SECURITY;

CREATE POLICY IF NOT EXISTS "Admin users can manage system config" ON system_config
  FOR ALL USING (
    EXISTS (
      SELECT 1 FROM admin_users 
      WHERE admin_users.email = auth.jwt() ->> 'email'
    )
  );

-- 5. Insertar configuraci√≥n inicial del sistema
INSERT INTO system_config (id, config, updated_at) VALUES (
  1,
  '{
    "site_name": "Gravito Website",
    "site_description": "Sitio web profesional de Gravito",
    "contact_email": "contacto@gravito.com",
    "maintenance_mode": false,
    "analytics_enabled": true
  }',
  NOW()
) ON CONFLICT (id) DO UPDATE SET
  config = EXCLUDED.config,
  updated_at = EXCLUDED.updated_at;

-- 6. Insertar posts de ejemplo del blog
INSERT INTO blog_posts (title, content, excerpt, published) VALUES
  ('Bienvenido a Gravito', 'Este es el primer post de nuestro blog. Aqu√≠ compartiremos noticias, actualizaciones y contenido relevante sobre nuestros servicios.', 'Bienvenida al blog oficial de Gravito', true),
  ('Nuestros Servicios', 'Descubre todos los servicios que ofrecemos en Gravito. Desde desarrollo web hasta estrategia digital, estamos aqu√≠ para ayudarte.', 'Conoce todos nuestros servicios profesionales', false)
ON CONFLICT DO NOTHING;
`;

    fs.writeFileSync('setup-blog-and-config.sql', sqlContent);
    console.log('‚úÖ Archivo setup-blog-and-config.sql creado');

    console.log('\nüéâ Script de configuraci√≥n completado!');
    console.log('\nüìã Pr√≥ximos pasos:');
    console.log('  1. Ve a tu panel de Supabase');
    console.log('  2. Abre el SQL Editor');
    console.log('  3. Copia y pega el contenido del archivo setup-blog-and-config.sql');
    console.log('  4. Ejecuta el SQL');
    console.log('  5. ¬°Listo! Las nuevas funcionalidades estar√°n disponibles');
    console.log('\nüöÄ Despu√©s de ejecutar el SQL, podr√°s usar:');
    console.log('  ‚úÖ Editor visual para p√°ginas');
    console.log('  ‚úÖ Gesti√≥n completa del blog');
    console.log('  ‚úÖ Configuraci√≥n del sistema');

  } catch (error) {
    console.error('‚ùå Error inesperado:', error);
    process.exit(1);
  }
}

// Ejecutar si se llama directamente
if (require.main === module) {
  setupBlogAndConfig();
}

module.exports = { setupBlogAndConfig };
